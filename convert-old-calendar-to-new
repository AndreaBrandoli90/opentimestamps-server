#!/usr/bin/env python3
# Copyright (C) 2016 The OpenTimestamps developers
#
# This file is part of the OpenTimestamps Server.
#
# It is subject to the license terms in the LICENSE file found in the top-level
# directory of this distribution.
#
# No part of the OpenTimestamps Server, including this file, may be copied,
# modified, propagated, or distributed except according to the terms contained
# in the LICENSE file.

import argparse
import logging
from logging.handlers import RotatingFileHandler
import os
import queue
import sys

from bitcoin.core import b2x,x

from opentimestamps.core.timestamp import Timestamp
from opentimestamps.core.serialize import StreamDeserializationContext

import otsserver.calendar
import otsserver.rpc
import otsserver.stamper

parser = argparse.ArgumentParser(description="Convert old-style calendar to new LevelDB calendar")

parser.add_argument("-c", "--calendar", type=str,
                    dest='calendar_path',
                    default='~/.otsd/calendar',
                    help="Location of the calendar (default: '%(default)s')")

args = parser.parse_args()

calendar_path = os.path.expanduser(args.calendar_path)

calendar = otsserver.calendar.Calendar(calendar_path)

def add_timestamp_file_to_calendar(path):
    with open(path, 'rb') as fd:
        commitment = x(path.split('/')[-2])

        ctx = StreamDeserializationContext(fd)

        print("Importing commitment %s" % b2x(commitment))
        timestamp = Timestamp.deserialize(ctx, commitment)

        calendar.db.add(timestamp)

for root, dirs, files in os.walk(calendar_path + '/timestamps/'):
    for filename in files:
        path = root + '/' + filename
        add_timestamp_file_to_calendar(path)

# vim:syntax=python filetype=python
